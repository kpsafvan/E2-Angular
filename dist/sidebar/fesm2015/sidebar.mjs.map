{"version":3,"file":"sidebar.mjs","sources":["../../../projects/sidebar/src/lib/sidebar.service.ts","../../../projects/sidebar/src/lib/sidebar.component.ts","../../../projects/sidebar/src/lib/sidebar.module.ts","../../../projects/sidebar/src/public-api.ts","../../../projects/sidebar/src/sidebar.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidebarService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nimport { Router } from '@angular/router';\nimport { delay } from 'rxjs';\n@Component({\n  selector: 'lib-Sidebar',\n  template: `\n    <style>\n      .sidenav-container {\n        height: 92.5%;\n      }\n      .sidenav {\n        padding-top: 1%;\n        border-color: white;\n        border-width: 5%;\n        width: 15%;\n        color: white;\n        background-color: #676767;\n        text-decoration-line: underline;\n        text-decoration: azure;\n        transition: width 0.3s ease-out;\n        transition: width 0s ease-in;\n      }\n      .sidenav-small {\n        padding-top: 1%;\n        border-color: white;\n        border-width: 20%;\n        background-color: #676767;\n        width: 2.5%;\n        transition: width 0.3s ease-out;\n        transition: width 0s ease-in;\n      }\n      .grid-container {\n        padding-top: 20%;\n        display: grid;\n        width: 100%;\n        grid-template-columns: auto;\n      }\n      .grid-item {\n        display: grid;\n        margin-top: 5%;\n        margin-bottom: 10%;\n        padding-bottom: 5%;\n        cursor: pointer;\n        font-size: 2rem;\n        border-bottom: 2px solid #ccc;\n        font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\n      }\n      .grid-container-sub {\n        display: grid;\n        width: 100%;\n        grid-template: auto;\n      }\n      .grid-item-sub {\n        padding-left: 2rem;\n        margin-top: 5%;\n        margin-bottom: 10%;\n        cursor: pointer;\n        font-size: 1.5rem;\n        border-bottom: 2px solid #ccc;\n        font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\n      }\n      .nav-list:hover() {\n        cursor: pointer;\n      }\n      .buttons {\n        color: white;\n        background-color: transparent;\n        border-color: transparent;\n        cursor: default;\n      }\n      mat-icon {\n        cursor: pointer;\n        vertical-align: middle;\n      }\n    </style>\n    <mat-sidenav-container class=\"sidenav-container\">\n      <mat-sidenav\n        #sidenav\n        mode=\"side\"\n        opened=\"true\"\n        class=\"sidenav\"\n        *ngIf=\"open\"\n      >\n        <button\n          mat-button\n          (click)=\"opened(); sidenav.toggle()\"\n          class=\"buttons\"\n          style=\"float: right;\"\n        >\n          <mat-icon style=\"transform: rotate(180deg)\"> input </mat-icon>\n          <!-- < \n          <img src=\"HamburgerIcon.png\" alt=\"naeahi\" />\n          <img src=\"/HamburgerIcon.png\" alt=\"naashi\" />\n          <img src=\"assets/HamburgerIcon.png\" alt=\"naashi\" />\n          <img src=\"/assets/HamburgerIcon.png\" alt=\"naashi\" /> \n          <img src=\"/assets/HamburgerIcon.png\" alt=\"naashi\" /> -->\n        </button>\n\n        <div class=\"grid-container\">\n          <div class=\"grid-item\">MAIN</div>\n        </div>\n        <div class=\"grid-container-sub\">\n          <div class=\"grid-item-sub\">\n            <a (click)=\"dashboard()\"\n              ><mat-icon> dashboard </mat-icon> Dashboard</a\n            >\n          </div>\n          <div class=\"grid-item-sub\">\n            <a (click)=\"category()\"><mat-icon> category </mat-icon> Category</a>\n          </div>\n          <div class=\"grid-item-sub\">\n            <a (click)=\"stocks()\"> <mat-icon> store </mat-icon> Stocks</a>\n          </div>\n          <div class=\"grid-item-sub\">\n            <a (click)=\"products()\">\n              <mat-icon> shopping_basket </mat-icon> Products</a\n            >\n          </div>\n        </div>\n      </mat-sidenav>\n      <mat-sidenav\n        #sidenav\n        mode=\"side\"\n        opened\n        class=\"sidenav-small\"\n        *ngIf=\"!open\"\n      >\n        <button\n          class=\"buttons\"\n          (click)=\"opened(); sidenav.toggle()\"\n          style=\"width:100%\"\n        >\n          <mat-icon> dehaze </mat-icon>\n        </button>\n      </mat-sidenav>\n      <mat-sidenav-content>\n        <ng-content></ng-content>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  `,\n  styles: [],\n})\nexport class SidebarComponent implements OnInit {\n  open = true;\n  collapsible = true;\n  dash = false;\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    this.open = true;\n  }\n  dashboard() {\n    this.router.navigate(['dashboard']);\n    this.dash = true;\n  }\n  category() {\n    this.router.navigate(['category']);\n  }\n  stocks() {\n    this.router.navigate(['stocks']);\n  }\n  public products() {\n    this.router.navigate(['products']);\n  }\n  public change() {\n    this.open = !this.open;\n  }\n  opened() {\n    setTimeout(() => {\n      this.change();\n    }, 150);\n    // this.open = !this.open;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SidebarComponent } from './sidebar.component';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CommonModule } from '@angular/common';\n@NgModule({\n  declarations: [SidebarComponent],\n  imports: [MatSidenavModule, MatIconModule, MatFormFieldModule, CommonModule],\n  exports: [SidebarComponent],\n})\nexport class SidebarModule {}\n","/*\n * Public API Surface of sidebar\n */\n\nexport * from './lib/sidebar.service';\nexport * from './lib/sidebar.component';\nexport * from './lib/sidebar.module';  \n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}